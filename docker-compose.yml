version: '3.7'

services:
  php:
    image: ${DOCKER_REGISTRY}/php
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      target: local
      args:
        - PHP_IMAGE=${DOCKER_SERVICE_PHP_IMAGE}
        - COMPOSER_GLOBAL_PACKAGES=${DOCKER_SERVICE_PHP_COMPOSER_GLOBAL_PACKAGES}
      cache_from:
        - ${DOCKER_REGISTRY}/php
    ports:
      - "${DOCKER_SERVICE_PHP_XDEBUG_EXPOSED_PORT}:9000"
    depends_on:
      - mysql
      - redis
    volumes:
      - ./:/application

  mysql:
    image: ${DOCKER_SERVICE_MYSQL_IMAGE}
    ports:
      - "${DOCKER_SERVICE_MYSQL_EXPOSED_PORT}:3306"
    volumes:
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_ROOT_PASSWORD=${DOCKER_SERVICE_MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}

  nginx:
    image: ${DOCKER_REGISTRY}/nginx
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
      target: nginx
      args:
        - NGINX_IMAGE=${DOCKER_SERVICE_NGINX_IMAGE}
      cache_from:
        - ${DOCKER_REGISTRY}/nginx
    ports:
      - "${DOCKER_SERVICE_NGINX_EXPOSED_PORT}:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/server.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php

  redis:
    image: ${DOCKER_SERVICE_REDIS_IMAGE}
    ports:
      - "${DOCKER_SERVICE_REDIS_EXPOSED_PORT}:6379"

  frontend:
    image: ${DOCKER_REGISTRY}/frontend
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
      target: frontend
      args:
        - NODE_IMAGE=${DOCKRT_SERVICE_NODE_IMAGE}
      cache_from:
        - ${DOCKER_REGISTRY}/frontend
    entrypoint:
      - /usr/local/bin/npm
      - run
      - production
